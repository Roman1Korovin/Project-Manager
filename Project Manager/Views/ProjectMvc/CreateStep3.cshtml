@using Project_Manager.DTOs
@model Step3DTO

@{
    ViewData["Title"] = "Создание проекта - Шаг 3";
}

<h2>Создание проекта - Шаг 3/5</h2>

<form asp-action="CreateStep3" method="post">
    @Html.AntiForgeryToken()

    <!-- Manager Select2 -->
    <div class="mb-3">
        <label asp-for="ManagerID" class="form-label">Руководитель проекта</label>
        <select asp-for="ManagerID" class="form-select" id="managerSelect" style="width: 100%;" required>
            <option value="">-- Выберите сотрудника --</option>
        </select>
    </div>

    <button type="submit" class="btn btn-primary">Далее</button>
    <a asp-action="CreateStep2" class="btn btn-secondary">Назад</a>
</form>

@section Scripts {
    <script>
        // Event that is triggered when page loads
        $(document).ready(function() {
            $('#managerSelect').select2({       //Initialize Select2 in the managerSelect field
                placeholder: "-- Выберите руководителя --",
                allowClear: true,
                 // Configure AJAX for dynamic loading of data
                ajax: {
                    url: '@Url.Action("SearchEmployees")',      //url to fetch data from
                    dataType: 'json',                           // Expect JSON response
                    delay: 500,                                 // delay to reduce the number of requests
                    data: function(params) {                    //send to server
                        return { term: params.term || ''};      
                    },
                    processResults: function(data) {            //get from server
                        return { results: data };
                    },
                    cache: true
                },
                minimumInputLength: 0, //Search is triggered even if field is empty.
                language: {    // configure messages
                    noResults: function() {
                        return "Сотрудники не найдены";
                    },
                    searching: function() {
                        return "Поиск..."
                    }
                }
            });

            // If manager is already selected (when returning to the step or update)
            var selectedId = '@Model.ManagerID';
            if (selectedId) {
                $.get('@Url.Action("SearchEmployees")', { term: '' }, function(data) {  //AJAX GET request to server SearchEmployees method
                    var employee = data.find(x => x.id == selectedId);
                    if (employee) {
                        var option = new Option(employee.text, employee.id, true, true); //Create new <option> element for <select>
                        $('#managerSelect').append(option).trigger('change');   //Add and update <select>
                    }
                });
            }
        });
    </script>
}