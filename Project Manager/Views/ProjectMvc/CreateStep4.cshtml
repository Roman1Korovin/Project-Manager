@using Project_Manager.DTOs
@model Step4DTO

@{
    ViewData["Title"] = "Создание проекта - Шаг 4";
}

<h2>Создание проекта - Шаг 4/5</h2>

<form asp-action="CreateStep4" method="post">
    @Html.AntiForgeryToken()

    <div class="mb-3">
        <label class="form-label">Выберите сотрудников проекта</label>
        <select id="employeeSelect" style="width:100%"></select>
    </div>

    <div class="mb-3">
        <label>Выбранные сотрудники:</label>
        <ul id="selectedEmployees">
            @foreach (var id in Model.EmployeeIDs)
            {
                var emp = ((List<EmployeeDTO>)ViewBag.Employees).FirstOrDefault(e => e.Id == id);
                if (emp != null)
                {
                    <li data-id="@emp.Id">
                        @emp.FullName
                        <button type="button" class="btn btn-sm btn-danger remove-btn">x</button>
                        <input type="hidden" name="selectedEmployeeIds" value="@emp.Id" />
                    </li>
                }
            }
        </ul>
    </div>

    <button type="submit" class="btn btn-primary">Далее</button>
    <a asp-action="CreateStep3" class="btn btn-secondary">Назад</a>
</form>

@section Scripts {

    <script>
        const selectedEmployees = document.getElementById("selectedEmployees");

        //Handler for delete button
        function addRemoveListener(btn) {
            btn.addEventListener("click", () => {
                const li = btn.parentElement;
                li.remove();
            });
        }
        //For each button that is already there when page loads, enable the delete function
        document.querySelectorAll(".remove-btn").forEach(addRemoveListener);

       // event that is triggered when the page loads
        $(document).ready(function() {
            $('#employeeSelect').select2({
                placeholder: "-- Выберите сотрудника --",
                allowClear: true,
                ajax: {
                    url: '@Url.Action("SearchEmployees")',
                    dataType: 'json',
                    delay: 500, 
                    data: function(params) {
                        return { term: params.term || '' };
                    },
                    processResults: function(data) {
                        return { results: data };
                    },
                    cache: true
                },
                minimumInputLength: 0,
                language: {
                    noResults: function() { 
                        return "Сотрудники не найдены";
                    },
                    searching: function() {
                        return "Поиск..."
                    } 
                } 
            });

             //event that is triggered when user selects employee from list
            $('#employeeSelect').on('select2:select', function(e) {
                const data = e.params.data;

                 // Check that employee hasn't been selected
                if ([...selectedEmployees.querySelectorAll("li")].some(li => li.dataset.id == data.id)) return;

                //Creat new <li> element for selected employee
                const li = document.createElement("li");
                li.dataset.id = data.id;
                li.textContent = data.text + " ";

                //Create remove button
                const btn = document.createElement("button");
                btn.type = "button";
                btn.className = "btn btn-sm btn-danger remove-btn";
                btn.textContent = "x";
                addRemoveListener(btn);

                 //Add remove button inside <li>
                li.appendChild(btn);

                // Add hidden input inside <li> element that when form submit, the selected employees are send to server.
                const hiddenInput = document.createElement("input");
                hiddenInput.type = "hidden";
                hiddenInput.name = "selectedEmployeeIds";
                hiddenInput.value = data.id;
                li.appendChild(hiddenInput);

                 //Add <li> to container selectedEmployees on page 
                selectedEmployees.appendChild(li);

                 //Clear #employeeSelect
                $(this).val(null).trigger('change');
            });
        });
    </script>
}
